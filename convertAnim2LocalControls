//Amedeo Beretta
//https://www.linkedin.com/in/amedeoberetta/
//https://www.youtube.com/channel/UCMDRaVXKrhoFiKv1xdH14iA/
//
//Space converter v0.3
//this is a Mel script to convert Advanced Skeleton animation from main controller to local controls in order to retain world position when exporting to Unreal as FBX
//usage: select 1 control from your rig and run
//
//You need to run this once for each rig in the the scene.
//
//IF YOU HAVE ANIMATION LAYERS YOU NEED TO MERGE THEM BEFORE RUNNING THISq!!!
//
{


string $controls[]= {"PoleArm_L", "PoleArm_R", "PoleLeg_L", "PoleLeg_R","FKHead_M", "RootX_M", "IKArm_L", "IKArm_R", "IKLeg_L", "IKLeg_R", "FKShoulder_R", "FKShoulder_L"};
//this is the last array index where a pole vector is found
int $lastPV=3;
//this is the last array index where a head is found
int $head=4;

//this is the name of the master
string $master = "Main";
string $sel[] = `ls -sl`;
string $splitter = ":";
string $buffer[];
string $controlsRebuiltNames[];
int $parentType;


string $locs[];
string $constraints[];

float $minTime = `playbackOptions -q -minTime`;
float $maxTime = `playbackOptions -q -maxTime`;

int $namespace = 1;

tokenize $sel[0] $splitter $buffer;
//print $buffer;


//find namespace
if (size($buffer)<2)
    {
    print "not referenced";
    $namespace = 0;
    }



//string $loc[] = `spaceLocator -p 0 0 0 -n ($buffer[0] + "_" + $master + "_LOC")`;
//$locs[size($locs)]=$loc[0];


//create locators that follow local controls and bake their anim
for ($each in $controls)
    {
    string $loc[] = `spaceLocator -p 0 0 0 -n ($buffer[0] + "_" + $each + "_LOC")`;
    $locs[size($locs)]=$loc[0];
    if ($namespace==0)
        {
        //$each = $buffer[0] + $splitter + $each;
        $controlsRebuiltNames[size($controlsRebuiltNames)]=$each;
        }
    else
        {
        $each = $buffer[0] + $splitter + $each;
        $controlsRebuiltNames[size($controlsRebuiltNames)]=$each;
        }
    string $const[] =`parentConstraint -weight 1 $each $loc[0]`;
    $constraints[size($constraints)]=$const[0];
    }

//Check if controls are constrained and store list of their in scene (non referenced) constrains in $inSceneConstraints.
//These constraints will be deleted later to allow controls to be constrained to locators (just in case there's an animated constrain on a control).
string $inSceneConstraints[];
for ($each in $controlsRebuiltNames)
    {
    string $connections[] = `listRelatives -type constraint $each`;    
        for ($conn in $connections)
            {
            if (`referenceQuery -isNodeReferenced $conn` == 0)
            $inSceneConstraints[size($inSceneConstraints)]=$conn;
            }
    }


//clear viewport visibility

string $panels[] = `getPanel -type modelPanel`;
select -cl;
for ($each in $panels)
{
isolateSelect -state 1 $each;
}


//Bake controls motion to locators and delete locators constraints
bakeResults -simulation true -t ($minTime + ":" + $maxTime) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true -preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false -removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at "tx" -at "ty" -at "tz" -at "rx" -at "ry" -at "rz" $locs $controlsRebuiltNames;
delete $constraints;
clear $constraints;

//now that control motion has been baked, it should be safe to delete any constraint the animator put on this rig in the scene, so we delete them
if (size($inSceneConstraints) >0)
{
delete $inSceneConstraints;
}

//constrain local controls to locators (point constraint if polevector, parent constraint if other)
for( $i=0 ; $i < size($controlsRebuiltNames); ++$i)
    {
    if ($i <= $lastPV)
        {
        string $const[] =`pointConstraint -weight 1 $locs[$i] $controlsRebuiltNames[$i]`;
        $constraints[size($constraints)]=$const[0];
        }
    else
        {
        string $const[] =`parentConstraint -weight 1 $locs[$i] $controlsRebuiltNames[$i]`;
        $constraints[size($constraints)]=$const[0]; 
        }
    }

//go back to the beginning of the visible timeline
currentTime $minTime;

//select master and zero it out, then set a key and remove animation.
string $masterSel = `select -r ($buffer[0] + ":" + $master)`;
setAttr ($masterSel + ".translateX") 0;
setAttr ($masterSel + ".translateY") 0;
setAttr ($masterSel + ".translateZ") 0;
setAttr ($masterSel +  ".rotateX") 0;
setAttr ($masterSel +  ".rotateY") 0;
setAttr ($masterSel +  ".rotateZ") 0;

cutKey -clear;
setKeyframe -breakdown 0 -hierarchy none -controlPoints 0 -shape 0 {($buffer[0] + ":" + $master)};


//bake control motion so that it follows that of constraints. Than delete constraints and locators.
bakeResults -simulation true -t ($minTime + ":" + $maxTime) -sampleBy 1 -oversamplingRate 1 -disableImplicitControl true -preserveOutsideKeys true -sparseAnimCurveBake false -removeBakedAttributeFromLayer false -removeBakedAnimFromLayer false -bakeOnOverrideLayer false -minimizeRotation true -at "tx" -at "ty" -at "tz" -at "rx" -at "ry" -at "rz" $controlsRebuiltNames;

delete $constraints $locs;


for ($each in $panels)
    {
    isolateSelect -state 0 $each;
    }

print "Your animation converted has been. Go on you can!";

}
